{"version":3,"sources":["webpack://gatsby-dev-blog/./node_modules/@styled-icons/remix-fill/Calendar/Calendar.esm.js","webpack://gatsby-dev-blog/./node_modules/@styled-icons/remix-fill/Timer/Timer.esm.js","webpack://gatsby-dev-blog/./src/components/postItem/index.js","webpack://gatsby-dev-blog/./src/templates/tags.js"],"names":["Calendar","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","fill","d","displayName","Timer","title","url","description","date","timeToRead","Link","to","className","dangerouslySetInnerHTML","__html","raw","data","pageContext","location","tag","posts","allMarkdownRemark","nodes","tagHeader","length","icp","site","siteMetadata","projectUrl","map","post","key","fields","slug","frontmatter","excerpt"],"mappings":"4MAGWA,EAAwB,cAAiB,SAAUC,EAAOC,GAKnE,OAAoB,gBAAoB,IAAgB,IAAS,CAC/DC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,SACnBC,YAAa,aACZJ,EAAO,CACRC,IAAKA,IACU,gBAAoB,OAAQ,CAC3CI,KAAM,OACNC,EAAG,kBACY,gBAAoB,OAAQ,CAC3CA,EAAG,yGAGPP,EAASQ,YAAc,WAChB,ICnBIC,EAAqB,cAAiB,SAAUR,EAAOC,GAKhE,OAAoB,gBAAoB,IAAgB,IAAS,CAC/DC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,SACnBC,YAAa,aACZJ,EAAO,CACRC,IAAKA,IACU,gBAAoB,OAAQ,CAC3CI,KAAM,OACNC,EAAG,kBACY,gBAAoB,OAAQ,CAC3CA,EAAG,4GAGPE,EAAMD,YAAc,QACb,ICMP,EAvBiB,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAKC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,WAAlC,OACf,gBAAC,EAAAC,KAAD,CAAMC,GAAIL,EAAKM,UAAU,mCACvB,0BAAQA,UAAU,oBAAoBP,GACtC,2BAASO,UAAU,mBACjB,qBACEC,wBAAyB,CACvBC,OAAQP,MAId,2BAASK,UAAU,mBACjB,uBAAKA,UAAU,QACb,gBAAC,EAAD,CAAUA,UAAU,SACnBJ,GAEH,uBAAKI,UAAU,aACb,gBAACR,EAAD,CAAWQ,UAAU,SACjBH,EAFN,iB,qFCMN,UApBqB,SAAAM,GAAQ,IACnBC,EAAgCD,EAAhCC,KAAMC,EAA0BF,EAA1BE,YAAaC,EAAaH,EAAbG,SACrBC,EAAMF,EAAYE,IAClBC,EAAQJ,EAAKK,kBAAkBC,MAC/BC,EAAS,SAAYH,EAAMI,OAAlB,SAAiD,IAAjBJ,EAAMI,OAAe,GAAK,KAA1D,iBAA8EL,EAA9E,KAEf,OACE,gBAAC,IAAD,CAAQD,SAAUA,EAAUO,IAAKT,EAAKU,KAAKC,aAAaF,IAAKG,WAAYZ,EAAKU,KAAKC,aAAaC,YAC9F,gBAAC,IAAD,CAAKvB,MAAK,QAAUc,IACpB,uBAAKP,UAAU,aAAaI,EAAKU,KAAKC,aAAatB,OACnD,uBAAKO,UAAU,cAAcW,GAC7B,2BAASX,UAAU,aAChBQ,EAAMS,KAAI,SAAAC,GAAI,OACb,gBAAC,IAAD,CAAUC,IAAKD,EAAKE,OAAOC,KAAM5B,MAAOyB,EAAKI,YAAY7B,MAAOC,IAAKwB,EAAKE,OAAOC,KAAM1B,YAAauB,EAAKI,YAAY3B,aAAeuB,EAAKK,QAAS3B,KAAMsB,EAAKI,YAAY1B,KAAMC,WAAYqB,EAAKrB","file":"component---src-templates-tags-js-68979ba0d7de824cebce.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Calendar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 11h20v9a1 1 0 01-1 1H3a1 1 0 01-1-1v-9zm15-8h4a1 1 0 011 1v5H2V4a1 1 0 011-1h4V1h2v2h6V1h2v2z\"\n  }));\n});\nCalendar.displayName = 'Calendar';\nexport var CalendarDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Timer = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.618 5.968l1.453-1.453 1.414 1.414-1.453 1.453a9 9 0 11-1.414-1.414zM11 8v6h2V8h-2zM8 1h8v2H8V1z\"\n  }));\n});\nTimer.displayName = 'Timer';\nexport var TimerDimensions = {\n  height: 24,\n  width: 24\n};","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { Timer as TimerIcon, Calendar as DateIcon } from '@styled-icons/remix-fill';\r\nimport './index.scss';\r\n\r\nconst PostItem = ({ title, url, description, date, timeToRead }) => (\r\n  <Link to={url} className=\"accerator purea post-item glass\">\r\n    <header className=\"post-item__title\">{title}</header>\r\n    <section className=\"post-item__desc\">\r\n      <p\r\n        dangerouslySetInnerHTML={{\r\n          __html: description,\r\n        }}\r\n      />\r\n    </section>\r\n    <section className=\"post-item__info\">\r\n      <div className=\"date\">\r\n        <DateIcon className=\"icon\" />\r\n        {date}\r\n      </div>\r\n      <div className=\"read-time\">\r\n        <TimerIcon className=\"icon\" />\r\n        {`${timeToRead} min read`}\r\n      </div>\r\n    </section>\r\n  </Link>\r\n);\r\n\r\nexport default PostItem;\r\n","import * as React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport PostItem from '../components/postItem';\r\n\r\nconst TagsTemplate = raw => {\r\n  const { data, pageContext, location } = raw;\r\n  const tag = pageContext.tag;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n  const tagHeader = `Found ${posts.length} post${posts.length === 1 ? \"\" : \"s\"} tagged with \"${tag}\".`;\r\n\r\n  return (\r\n    <Layout location={location} icp={data.site.siteMetadata.icp} projectUrl={data.site.siteMetadata.projectUrl}>\r\n      <Seo title={`Tag: ${tag}`} />\r\n      <div className=\"blog-name\">{data.site.siteMetadata.title}</div>\r\n      <div className=\"tag-header\">{tagHeader}</div>\r\n      <section className=\"post-list\">\r\n        {posts.map(post => (\r\n          <PostItem key={post.fields.slug} title={post.frontmatter.title} url={post.fields.slug} description={post.frontmatter.description || post.excerpt} date={post.frontmatter.date} timeToRead={post.timeToRead} />\r\n        ))}\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TagsTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        icp\r\n        projectUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        timeToRead\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}