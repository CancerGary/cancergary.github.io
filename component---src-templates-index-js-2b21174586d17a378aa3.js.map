{"version":3,"sources":["webpack://gatsby-dev-blog/./node_modules/@styled-icons/remix-fill/Calendar/Calendar.esm.js","webpack://gatsby-dev-blog/./node_modules/@styled-icons/remix-fill/Timer/Timer.esm.js","webpack://gatsby-dev-blog/./src/components/postItem/index.js","webpack://gatsby-dev-blog/./node_modules/@styled-icons/boxicons-solid/ChevronLeft/ChevronLeft.esm.js","webpack://gatsby-dev-blog/./node_modules/@styled-icons/boxicons-solid/ChevronRight/ChevronRight.esm.js","webpack://gatsby-dev-blog/./src/components/pagination/index.js","webpack://gatsby-dev-blog/./src/templates/index.js"],"names":["Calendar","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","fill","d","displayName","Timer","title","url","description","date","timeToRead","Link","to","className","dangerouslySetInnerHTML","__html","ChevronLeft","ChevronRight","pageContext","location","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","baseUrl","pathname","replace","length","PATH_PAGE","PATH_PREV","PATH_NEXT","prevIcon","nextIcon","pageNumbers","cur","last","raw","nums","Array","from","Set","filter","item","res","i","push","genPageList","PageLink","str","Devider","key","Math","random","pageList","map","number","useState","setStickyNav","data","posts","allMarkdownRemark","nodes","useEffect","catNav","document","querySelector","observer","IntersectionObserver","e","isIntersecting","root","threshold","observe","disconnect","icp","site","siteMetadata","projectUrl","post","fields","slug","frontmatter","excerpt"],"mappings":"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","file":"component---src-templates-index-js-2b21174586d17a378aa3.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Calendar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 11h20v9a1 1 0 01-1 1H3a1 1 0 01-1-1v-9zm15-8h4a1 1 0 011 1v5H2V4a1 1 0 011-1h4V1h2v2h6V1h2v2z\"\n  }));\n});\nCalendar.displayName = 'Calendar';\nexport var CalendarDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Timer = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.618 5.968l1.453-1.453 1.414 1.414-1.453 1.453a9 9 0 11-1.414-1.414zM11 8v6h2V8h-2zM8 1h8v2H8V1z\"\n  }));\n});\nTimer.displayName = 'Timer';\nexport var TimerDimensions = {\n  height: 24,\n  width: 24\n};","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { Timer as TimerIcon, Calendar as DateIcon } from '@styled-icons/remix-fill';\r\nimport './index.scss';\r\n\r\nconst PostItem = ({ title, url, description, date, timeToRead }) => (\r\n  <Link to={url} className=\"accerator purea post-item glass\">\r\n    <header className=\"post-item__title\">{title}</header>\r\n    <section className=\"post-item__desc\">\r\n      <p\r\n        dangerouslySetInnerHTML={{\r\n          __html: description,\r\n        }}\r\n      />\r\n    </section>\r\n    <section className=\"post-item__info\">\r\n      <div className=\"date\">\r\n        <DateIcon className=\"icon\" />\r\n        {date}\r\n      </div>\r\n      <div className=\"read-time\">\r\n        <TimerIcon className=\"icon\" />\r\n        {`${timeToRead} min read`}\r\n      </div>\r\n    </section>\r\n  </Link>\r\n);\r\n\r\nexport default PostItem;\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ChevronLeft = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.939 4.939L6.879 12l7.06 7.061 2.122-2.122L11.121 12l4.94-4.939z\"\n  }));\n});\nChevronLeft.displayName = 'ChevronLeft';\nexport var ChevronLeftDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ChevronRight = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.061 19.061L17.121 12l-7.06-7.061-2.122 2.122L12.879 12l-4.94 4.939z\"\n  }));\n});\nChevronRight.displayName = 'ChevronRight';\nexport var ChevronRightDimensions = {\n  height: 24,\n  width: 24\n};","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { ChevronLeft as LeftIcon } from '@styled-icons/boxicons-solid';\r\nimport { ChevronRight as RightIcon } from '@styled-icons/boxicons-solid';\r\nimport './index.scss';\r\n\r\nlet genPageList = (cur, last) => {\r\n  const raw = [1, cur - 2, cur - 1, cur, cur + 1, cur + 2, last];\r\n  let nums = Array.from(new Set(raw.filter(item => item >= 1 && item <= last)));\r\n  const res = [1];\r\n  for (let i = 1; i < nums.length - 1; i++) {\r\n    if (nums[i] - 1 !== nums[i - 1]) {\r\n      res.push(-1);\r\n    }\r\n\r\n    res.push(nums[i]);\r\n\r\n    if (nums[i] + 1 !== nums[i + 1]) {\r\n      res.push(-1);\r\n    }\r\n  }\r\n  last !== 1 && res.push(last);\r\n\r\n  return res;\r\n};\r\n\r\nconst Pagination = ({pageContext, location}) => {\r\n  const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext;\r\n  let baseUrl = location.pathname.replace(/\\/page\\/.*/, '');\r\n  baseUrl = baseUrl[baseUrl.length - 1] === '/' ? baseUrl : `${baseUrl}/`;\r\n  const PATH_ROOT = '';\r\n  const PATH_PAGE = 'page/';\r\n  const PATH_PREV = previousPagePath || `/${PATH_ROOT}`;\r\n  const PATH_NEXT = nextPagePath || `/${PATH_PAGE}${numberOfPages}`\r\n\r\n  const prevIcon = (\r\n    <Link to={PATH_PREV} className={`purea pagination__icon ${!previousPagePath && 'pagination__icon--disabled'}`}>\r\n      <div className=\"item-wrapper item-wrapper--chevron\">\r\n        <LeftIcon className=\"icon\" />\r\n      </div>\r\n    </Link>\r\n  );\r\n\r\n  const nextIcon = (\r\n    <Link to={PATH_NEXT} className={`purea pagination__icon ${!nextPagePath && 'pagination__icon--disabled'}`}>\r\n      <div className=\"item-wrapper item-wrapper--chevron\">\r\n        <RightIcon className=\"icon\" />\r\n      </div>\r\n    </Link>\r\n  );\r\n\r\n  const pageNumbers = genPageList(humanPageNumber, numberOfPages);\r\n\r\n  const PageLink = ({ className, str, url }) => (\r\n    <Link to={url} className=\"purea\">\r\n      <div className={`item-wrapper ${className}`}>{str}</div>\r\n    </Link>\r\n  );\r\n\r\n  const Devider = (\r\n    <div key={Math.random()} className=\"divider\">\r\n      ...\r\n    </div>\r\n  );\r\n\r\n  const pageList = pageNumbers.map(number => {\r\n    let className = number === humanPageNumber ? 'item-wrapper--active' : '';\r\n    let url = number === 1 ? `${baseUrl}${PATH_ROOT}` : `${baseUrl}${PATH_PAGE}${number}`;\r\n\r\n    if (number === -1) {\r\n      return Devider;\r\n    } else {\r\n      return <PageLink className={className} str={number} key={url} url={url} />;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <nav className=\"pagination\">\r\n      {prevIcon}\r\n      {pageList}\r\n      {nextIcon}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport CateNav from \"../components/cateNav\";\nimport PostItem from \"../components/postItem\";\nimport Pagination from \"../components/pagination/\";\nimport \"../styles/main.scss\";\n\nconst IndexTemplate = (raw) => {\n  const [stickyNav, setStickyNav] = useState(false);\n  const { data, pageContext, location } = raw;\n  const posts = data.allMarkdownRemark.nodes;\n\n  useEffect(() => {\n    const catNav = document.querySelector(\".blog-name\");\n    const observer = new IntersectionObserver(\n      (e) => setStickyNav(!e[0].isIntersecting),\n      {\n        root: null,\n        threshold: 0,\n      }\n    );\n    observer.observe(catNav);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <Layout\n      location={location}\n      icp={data.site.siteMetadata.icp}\n      projectUrl={data.site.siteMetadata.projectUrl}\n    >\n      <Seo title=\"All Posts\" />\n      <div className=\"blog-name\">{data.site.siteMetadata.title}</div>\n      {/*<CateNav cates={data.site.siteMetadata.nav} curCate={pageContext.cate} className={stickyNav ? 'accerator category-list--sticky' : ''} />*/}\n      <section className=\"post-list\">\n        {posts.map((post) => (\n          <PostItem\n            key={post.fields.slug}\n            title={post.frontmatter.title}\n            url={post.fields.slug}\n            description={post.frontmatter.description || post.excerpt}\n            date={post.frontmatter.date}\n            timeToRead={post.timeToRead}\n          />\n        ))}\n      </section>\n      <Pagination pageContext={pageContext} location={location} />\n    </Layout>\n  );\n};\n\nexport default IndexTemplate;\n\nexport const pageQuery = graphql`\n  query($limit: Int!, $skip: Int!, $cate: String = \"//\") {\n    site {\n      siteMetadata {\n        title\n        icp\n        nav\n        projectUrl\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { category: { regex: $cate } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      nodes {\n        excerpt\n        timeToRead\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}